openapi: 3.0.2
info:
  version: 1.0.0
  title: OpenAPI Petstore
  license:
    name: Apache-2.0
paths:
  /generate_from_response_schema_with_no_example:
    get:
      operationId: generateFromResponseSchemaWithNoExample
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /generate_from_response_schema_with_primitive_type:
    get:
      operationId: generateFromResponseSchemaWithNoExample
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: primitive type example value
  /generate_from_response_schema_with_array_of_model:
    get:
      operationId: generateFromResponseSchemaWithArrayOfModel
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringSchema'
  /generate_from_response_schema_with_array_of_primitive_types:
    get:
      operationId: generateFromResponseSchemaWithArrayOfPrimitiveTypes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: primitive types example value
  /generate_from_response_schema_with_model:
    get:
      operationId: generateFromResponseSchemaWithArrayOfPrimitiveTypes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleSchema'
  /generate_from_response_schema_with_array_of_model_with_min_items:
    get:
      operationId: generateFromResponseSchemaWithArrayOfModelMinItems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                string_array:
                  type: array
                  minItems: 2
                  items:
                    $ref: '#/components/schemas/ExampleSchema'
      responses:
        '200':
          description: successful operation
  /generate_from_response_schema_with_array_of_model_with_max_items:
    get:
      operationId: generateFromResponseSchemaWithArrayOfModelMinItems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                string_array:
                  type: array
                  maxItems: 1000
                  items:
                    $ref: '#/components/schemas/ExampleSchema'
      responses:
        '200':
          description: successful operation
  /generate_from_response_schema_with_array_of_model_no_min_or_max:
    get:
      operationId: generateFromResponseSchemaWithArrayOfModelMinItems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                string_array:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExampleSchema'
      responses:
        '200':
          description: successful operation
  /generate_from_response_schema_with_array_of_model_min_is_zero:
    get:
      operationId: generateFromResponseSchemaWithArrayOfModelMinItems
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                string_array:
                  type: array
                  minItems: 0
                  items:
                    $ref: '#/components/schemas/ExampleSchema'
      responses:
        '200':
          description: successful operation
components:
  schemas:
    StringSchema:
      type: string
      example: string schema example value
    ExampleSchema:
      type: object
      properties:
        example_schema_property:
          type: string
          example: example schema property value
